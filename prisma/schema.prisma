generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  name               String
  email              String    @unique
  emailVerified      DateTime?
  activationLink     String    @unique
  hashedPassword     String
  image              String?
  tel                String?
  role               Role      @default(WORKER)
  vacancyIds         String[]  @db.ObjectId
  respondedVacancies Vacancy[] @relation(fields: [vacancyIds], references: [id])
  resume             Resume?
  token              Token?
  company            Company?
}

model Token {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  refresh_token String @unique
  userId        String @unique @db.ObjectId
  user          User   @relation(fields: [userId], references: [id])
}

model Company {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String    @unique
  text           String?
  countryCenter  String
  img            String?
  userId         String    @unique @db.ObjectId
  user           User      @relation(fields: [userId], references: [id])
  vacancies      Vacancy[]
  hashedPassword String
  Resume         Resume[]
}

model Vacancy {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  name         String
  country      String
  city         String
  isHome       Boolean
  salary       Int
  currency     Currency
  experience   ExperienceTime @default(NOT)
  body         String
  watchingNow  Int            @default(0)
  closed       Boolean        @default(false)
  companyId    String         @db.ObjectId
  company      Company        @relation(fields: [companyId], references: [id])
  responderIds String[]       @db.ObjectId
  responders   User[]         @relation(fields: [responderIds], references: [id])
}

model Resume {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  body           String
  seenCompanyIds String[] @db.ObjectId //
  company        Company? @relation(fields: [seenCompanyIds], references: [id])
  userId         String   @unique @db.ObjectId
  user           User     @relation(fields: [userId], references: [id])
}

enum Role {
  WORKER
  EMPLOYER
}

enum ExperienceTime {
  NOT
  FROM_ONE_TO_THREE
  FROM_THREE_TO_SIX
}

enum KeySkills {
  FULLSTACK
  FRONTEND
  BACKEND
}

enum Currency {
  RUB
  USD
}
